syntax = "proto3";

package lczero.training;

// Configuration for training algorithm and parameters.
message TrainingConfig {
  ScheduleConfig schedule = 1;
  CheckpointConfig checkpoint = 2;
  OptimizerConfig optimizer = 3;
  LossWeightsConfig losses = 4;
  // Maximum gradient norm; set to 0 or omit to disable clipping.
  float max_grad_norm = 5;
}

message ScheduleConfig {
  int32 steps_per_network = 1;
  int32 chunks_per_network = 2;
}

message OptimizerConfig {
  oneof optimizer_type {
    NadamwOptimizerConfig nadamw = 1;
  }
  oneof lr_schedule {
    ConstantLRSchedule constant_lr = 2;
    LinearWarmupLRSchedule linear_warmup_lr = 4;
  }
  float momentum = 3;
}

message ConstantLRSchedule {
  float lr = 1;
}

message LinearWarmupLRSchedule {
  // Optimizer steps that define the piecewise-linear learning-rate curve.
  // The learning rate stays at lr[0] for steps before the first entry and
  // at lr[last] for steps after the last entry.
  repeated int32 step = 1;
  // Learning-rate values paired with each step entry.
  repeated float lr = 2;
}

message NadamwOptimizerConfig {
  float beta_1 = 1;
  float beta_2 = 2;
  float epsilon = 3;
  float weight_decay = 4;
  bool decay_embedding = 5;
  bool decay_biases = 6;
  bool decay_layer_norms = 7;
}

message CheckpointConfig {
  string path = 1;
  int32 max_to_keep = 2;
}

message LossWeightsConfig {
  repeated PolicyLossWeightsConfig policy = 1;
  repeated ValueLossWeightsConfig value = 2;
  repeated MovesLeftLossWeightsConfig movesleft = 3;
}

message PolicyLossWeightsConfig {
  string name = 1;
  float weight = 2;
  enum IllegalMoveHandling {
    TRAIN_TO_ZERO = 0;
    MASK = 1;
  }
  IllegalMoveHandling illegal_moves = 3;
  enum LossType {
    LOSS_TYPE_UNSPECIFIED = 0;
    CROSS_ENTROPY = 1;
    KL = 2;
  }
  // Selects which policy loss implementation to use. Must be specified.
  LossType type = 4;
  // Soft policy temperature applied before normalizing targets for KL loss.
  // Values <= 0 disable the adjustment and keep raw targets.
  float temperature = 5;
}

message ValueLossWeightsConfig {
  string name = 1;
  float weight = 2;
}

message MovesLeftLossWeightsConfig {
  string name = 1;
  float weight = 2;
}
